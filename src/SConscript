
import glob, re

Import( "env" )
Import( "envJava" )
Import( "envPy" )

sAvTranscoder = env.StaticLibrary(
    'sAvTranscoder',
    Glob( 'AvTranscoder/*.cpp' ) + Glob( 'AvTranscoder/DatasStructures/*.cpp' ) ,
    LIBS = [
        'libavutil',
        'libavcodec',
        'libavformat',
        'libswscale',
        #'pthread',
    ]
)

SharedAvTranscoder = env.SharedLibrary(
    'AvTranscoder',
    Glob( 'AvTranscoder/*.cpp' ) + Glob( 'AvTranscoder/DatasStructures/*.cpp' ) ,
    LIBS = [
        'libavutil',
        'libavcodec',
        'libavformat',
        'libswscale',
        #'pthread',
    ]
)

jAvTranscoder = envJava.SharedLibrary(
        'jAvTranscoder',
        source=['AvTranscoder/avTranscoder.i'],
        LIBS=[ 
            sAvTranscoder,
            'libavutil',
            'libavcodec',
            'libavformat',
            'libswscale',
        ],
    )

# pyAvTranscoder = envPy.SharedLibrary(
#         'pyAvTranscoder',
#         source='AvTranscoder/avTranscoder.i',
#         LIBS=[ sAvTranscoder ],
#     )

envJava['JARCHDIR']=env.Dir('#build/src/').get_abspath()

avTranscoder_class = env.Java(
      target='AvTranscoderClass',
      source= Glob( '#build/src/AvTranscoder/src/AvTranscoder' ) )

avTranscoder_jar = env.Jar(
    target='jAvTranscoder.jar',
    source=avTranscoder_class )
    #source= Glob( '#build/src/AvTranscoderClass' ) )


# env.Depends( avTranscoder_class, jAvTranscoder )
# env.Depends( avTranscoder_jar, avTranscoder_class )

Export( { 'sAvTranscoder' : sAvTranscoder } )
Export( { 'AvTranscoder'  : 'AvTranscoder' } )
# Export( { 'AvTranscoder_jar': avTranscoder_class } )
