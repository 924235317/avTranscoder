import glob, re
import os

Import( "env" )
Import( "envJava" )
Import( "envPy" )
Import( "installPrefix" )
Import( "resampleLibraryName" )

avTranscoderVersion = "0.0.1"

env.Append(
    SHLIBVERSION = avTranscoderVersion
)

staticAvTranscoder = env.StaticLibrary(
    'sAvTranscoder',
    Glob( 'AvTranscoder/*.cpp' ) +
    Glob( 'AvTranscoder/*/*.cpp' ),
    LIBS = [
        'avutil',
        'avcodec',
        'avformat',
        'swscale',
        resampleLibraryName,
    ]
)

sharedAvTranscoder = env.SharedLibrary(
    'AvTranscoder',
    Glob( 'AvTranscoder/*.cpp' ) +
    Glob( 'AvTranscoder/*/*.cpp' ),
    LIBS = [
        'avutil',
        'avcodec',
        'avformat',
        'swscale',
        resampleLibraryName,
    ],
    SHLIBVERSION = avTranscoderVersion,
)

javaAvTranscoder = envJava.SharedLibrary(
	'jAvTranscoder',
	source=['AvTranscoder/avTranscoder.i'],
	LIBS=[ 
		staticAvTranscoder,
		'avutil',
		'avcodec',
		'avformat',
		'swscale',
		resampleLibraryName,
	],
)

pythonAvTranscoder = envPy.SharedLibrary(
	'pyAvTranscoder',
	source='AvTranscoder/avTranscoder.i',
	LIBS=[
		staticAvTranscoder,
		'avutil',
		'avcodec',
		'avformat',
		'swscale',
		resampleLibraryName,
	],
)

#avTranscoder_class = env.Java(
#    target='AvTranscoderClass',
#    source=Glob( envJava['JARCHDIR'] )
#)

#avTranscoder_jar = env.Jar(
#    target='jAvTranscoder.jar',
#    source=avTranscoder_class,
#)


# env.Depends( avTranscoder_class, jAvTranscoder )
# env.Depends( avTranscoder_jar, avTranscoder_class )
Export( { 'sAvTranscoder' : staticAvTranscoder } )
Export( { 'AvTranscoder'  : sharedAvTranscoder } )

# Export( { 'AvTranscoder_jar': avTranscoder_class } )

env.Alias( "install", env.InstallVersionedLib( os.path.join( installPrefix, "lib" ), sharedAvTranscoder) )
env.Alias( "install", env.Install( os.path.join( installPrefix, "lib" ), staticAvTranscoder ) )
env.Alias( "install", env.InstallVersionedLib( os.path.join( installPrefix, "lib" ), javaAvTranscoder ) )


env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder" ), Glob( 'AvTranscoder/*.hpp' ) ) )
env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder/CodedStream" ), Glob( 'AvTranscoder/CodedStream/*.hpp' ) ) )
env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder/CodedStructures" ), Glob( 'AvTranscoder/CodedStructures/*.hpp' ) ) )
env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder/EssenceStream" ), Glob( 'AvTranscoder/EssenceStream/*.hpp' ) ) )
env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder/EssenceStructures" ), Glob( 'AvTranscoder/EssenceStructures/*.hpp' ) ) )
env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder/EssenceTransform" ), Glob( 'AvTranscoder/EssenceTransform/*.hpp' ) ) )
env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder/File" ), Glob( 'AvTranscoder/File/*.hpp' ) ) )
env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder/Metadatas" ), Glob( 'AvTranscoder/Metadatas/MediaMetadatasStructures.hpp' ) ) )
env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder/Metadatas" ), Glob( 'AvTranscoder/Metadatas/Print.hpp' ) ) )
#env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder/Profiles" ), Glob( 'AvTranscoder/Profiles/*.hpp' ) ) )
env.Alias( "install", env.Install(os.path.join( installPrefix, "include/AvTranscoder/Transcoder" ), Glob( 'AvTranscoder/Transcoder/*.hpp' ) ) )

