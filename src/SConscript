
import glob, re

Import( "env" )
Import( "envJava" )
Import( "envPy" )

AvTranscoder = env.SharedLibrary(
    'cppAvTranscoder',
    Glob( 'AvTranscoder/*.cpp' ) + Glob( 'AvTranscoder/DatasStructures/*.cpp' ) ,
    LIBS = [
        'libavcodec'
    ]
)

jAvTranscoder = envJava.SharedLibrary(
        'jAvTranscoder',
        source='AvTranscoder/avTranscoder.i',
        LIBS=[ AvTranscoder ],
    )

pyAvTranscoder = envPy.SharedLibrary(
        'pyAvTranscoder',
        source='AvTranscoder/avTranscoder.i',
        LIBS=[ AvTranscoder ],
    )

envJava['JARCHDIR']=env.Dir('#build/src/').get_abspath()

avTranscoder_class = env.Java(
     target='AvTranscoderClass',
     #source='AvTranscoder/avTranscoder.i' )
     source= Glob( '#build/src/AvTranscoder' ) )

avTranscoder_jar = env.Jar(
     target='jAvTranscoder.jar',
     source=avTranscoder_class )
     #source= Glob( '#build/src/AvTranscoderClass' ) )


env.Depends( avTranscoder_class, jAvTranscoder )
env.Depends( avTranscoder_jar, avTranscoder_class )

Export( { 'AvTranscoder': AvTranscoder } )
Export( { 'AvTranscoder_jar': avTranscoder_class } )